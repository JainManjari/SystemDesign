{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 16,
      "versionNonce": 1365449550,
      "index": "ah",
      "isDeleted": false,
      "id": "zTRqwAG-40XhY_EqxakzY",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 320.07421875,
      "y": 135.81640625,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 129.39988708496094,
      "height": 50,
      "seed": 2140572242,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1721541233402,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "CAP Theorem\n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "CAP Theorem\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 148,
      "versionNonce": 1349616462,
      "index": "ai",
      "isDeleted": false,
      "id": "4tNveOM7dlncp087nP1sy",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 357.7578125,
      "y": 201.98046875,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 605.9194946289062,
      "height": 150,
      "seed": 632944142,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1721541408170,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "C => Consistency\nA => Availability\nP => Partition Tolerance\n\nCap theorem states that we can choose 2 out of 3 options\n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "C => Consistency\nA => Availability\nP => Partition Tolerance\n\nCap theorem states that we can choose 2 out of 3 options\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 1516,
      "versionNonce": 108924052,
      "index": "aj",
      "isDeleted": false,
      "id": "ZyQOg2lf7JSh1IZJjuYec",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 290.83984375,
      "y": 400.578125,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 899.0396728515625,
      "height": 950,
      "seed": 703039438,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1722438645901,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Different Types of Consistency\n1. Strong consistency: \n  It reads the latest write info from the database.\n  For ex- Bank Machine\n2. Eventual consistency:\n   A data replication may read stale data because of\n   replication delay but it will eventually catch up with the\n   new updated info.\n   For ex: Facebook post\n4. Weak consistency:\n   After a write, read may or may not happen.\n   For ex: Video calling (in case of network issues,\n                        video usually skips to the present moment \n                        and the info during network issues is lost)\n\n\n\n\n\nAvailability:\nThe system responds to requests without timeouts or errors all the time.\nEven if it contains stale info, then its still okay.\n\n1. System should work even if one machine fails. -\n  This is achieved by multiple machines setup which gives us redundancy. \n   (Horizontal scaling). When one fails, other can take over.\n\n\n\n\nPartition Tolerance\nThe system's ability to go on in terms of node connection failures.\nTwo nodes (database or application) are not able to communicate with each \nother as they experienced an outrage.\nIf you want to prioritize partition tolerance, then you can have only one:\nConsistency or Availability but not both.\n \n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Different Types of Consistency\n1. Strong consistency: \n  It reads the latest write info from the database.\n  For ex- Bank Machine\n2. Eventual consistency:\n   A data replication may read stale data because of\n   replication delay but it will eventually catch up with the\n   new updated info.\n   For ex: Facebook post\n4. Weak consistency:\n   After a write, read may or may not happen.\n   For ex: Video calling (in case of network issues,\n                        video usually skips to the present moment \n                        and the info during network issues is lost)\n\n\n\n\n\nAvailability:\nThe system responds to requests without timeouts or errors all the time.\nEven if it contains stale info, then its still okay.\n\n1. System should work even if one machine fails. -\n  This is achieved by multiple machines setup which gives us redundancy. \n   (Horizontal scaling). When one fails, other can take over.\n\n\n\n\nPartition Tolerance\nThe system's ability to go on in terms of node connection failures.\nTwo nodes (database or application) are not able to communicate with each \nother as they experienced an outrage.\nIf you want to prioritize partition tolerance, then you can have only one:\nConsistency or Availability but not both.\n \n",
      "autoResize": true,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}